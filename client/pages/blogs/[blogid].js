import axios from 'axios';
import Head from 'next/head';
import Image from 'next/image';
import React from 'react';
import Footer from '../../Components/Footer/Footer';
import Navbar from '../../Components/Navbar/Navbar';
import OtherBlog from '../../Components/OtherBlog/OtherBlog';
import styles from '../../styles/blogdetail.module.scss';

const blogDetail = ({blogDetail, otherBlogs}) => {
  // console.log(otherBlogs);
  return (
    <div className={styles.blogdetail_page}>
      <Head>
            <title>Blogs/{blogDetail?.title}</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.blog_detail}>
        <Navbar />

        <div className={styles.blog_detail_main}>
          <div className={styles.main_blogdetail}>
            <h1>{blogDetail?.title}</h1>
            <Image src={blogDetail?.image} className={styles.blogdetail_img} height={400} width={700} layout='responsive' alt='blogs' />

            {/* should map */}
            {blogDetail.desc && blogDetail?.desc.map((des, i) => {
              return <p key={i}>{des}</p>
            }) }

            <h2>{blogDetail.ques1 && blogDetail.ques1}</h2>
            {blogDetail.ques1Ans && blogDetail.ques1Ans.map((ans, i) => {
              return <p key={i}>{ans}</p>
            })}

            <h2>{blogDetail.ques2 && blogDetail.ques2}</h2>
            {blogDetail.ques2Ans && blogDetail.ques2Ans.map((ans, i) => {
              return <p key={i}>{ans}</p>
            })}

            <h2>{blogDetail.ques3 && blogDetail.ques3}</h2>
            {blogDetail.ques3Ans && blogDetail.ques3Ans.map((ans, i) => {
              return <p key={i}>{ans}</p>
            })}

            <h2>{blogDetail.ques4 && blogDetail.ques4}</h2>
            {blogDetail.ques4Ans && blogDetail.ques4Ans.map((ans, i) => {
              return <p key={i}>{ans}</p>
            })}

            <h2>{blogDetail.ques5 && blogDetail.ques5}</h2>
            {blogDetail.ques5Ans && blogDetail.ques5Ans.map((ans, i) => {
              return <p key={i}>{ans}</p>
            })}

            <h2>{blogDetail.ques6 && blogDetail.ques6}</h2>
            {blogDetail.ques6Ans && blogDetail.ques6Ans.map((ans, i) => {
              return <p key={i}>{ans}</p>
            })}

            <h2>{blogDetail.ques7 && blogDetail.ques7}</h2>
            {blogDetail.ques7Ans && blogDetail.ques7Ans.map((ans, i) => {
              return <p key={i}>{ans}</p>
            })}

            <h2>{blogDetail.ques8 && blogDetail.ques8}</h2>
            {blogDetail.ques8Ans && blogDetail.ques8Ans.map((ans, i) => {
              return <p key={i}>{ans}</p>
            })}

            <h2>{blogDetail.ques9 && blogDetail.ques9}</h2>
            {blogDetail.ques9Ans && blogDetail.ques9Ans.map((ans, i) => {
              return <p key={i}>{ans}</p>
            })}

            <h2>{blogDetail.ques10 && blogDetail.ques10}</h2>
            {blogDetail.ques10Ans && blogDetail.ques10Ans.map((ans, i) => {
              return <p key={i}>{ans}</p>
            })}
            
          </div>

          <div className={styles.blogdetail_right}>
            <h2>You might also like</h2>

            {otherBlogs.filter((blog) => blog._id !== blogDetail._id).slice(0, 3).map((blogg) => {
              return <OtherBlog key={blogg._id} blog={blogg} />
            })}
          </div>
        </div>
        </div>

        <Footer />
    </div>
  )
}

export default blogDetail

// getStaticPaths 
export async function getStaticPaths() {
  const res = await axios.get('https://ashikurme-backend.onrender.com/api/blogs/all');

  const data = await res.data.message;

  const paths = data.map((item) => {
    return {
      params: {
        blogid: item._id
      }
    }
  })

  return {
    paths,
    fallback: 'blocking'
  }
}

// getStaticProps
export async function getStaticProps(context) {
  const params = context.params
  const res = await axios.get(`https://ashikurme-backend.onrender.com/api/blogs/${params.blogid}`)
  const res2 = await axios.get(`https://ashikurme-backend.onrender.com/api/blogs/all`)

  const data = await res.data.message;
  const data2 = await res2.data.message;

  return {
    props: {
      blogDetail: data,
      otherBlogs: data2,
    },
    revalidate: 10,
  }
}